#!/usr/bin/env ruby
      
# Copyright (c) 2009 Cory Ondrejka. All rights reserved.
# See License.txt for licensing details.

require "#{File.dirname(__FILE__)}/../testing_file_support"

describe BalsamiqControlParser do
  it "properly handles vcurly" do
    data = <<-EOF
            <mockup version="1.0" skin="sketch">
      <controls>
        <control controlID="48" controlTypeID="com.balsamiq.mockups::VCurly" x="54" y="43" w="-1" h="-1" zOrder="0" locked="false" isInGroup="-1">
          <controlProperties>
            <text>A%20paragraph%20of%20text.%0AA%20second%20row%20of%20text.</text>
          </controlProperties>
        </control>
        <control controlID="49" controlTypeID="com.balsamiq.mockups::VCurly" x="136" y="171" w="241" h="229" zOrder="1" locked="false" isInGroup="-1">
          <controlProperties>
            <text>A%20paragraph%20of%20text.%0AA%20second%20row%20of%20text.</text>
            <italic>true</italic>
            <size>18</size>
            <direction>right</direction>
            <underline>true</underline>
            <align>center</align>
          </controlProperties>
        </control>
      </controls>
    </mockup>


    EOF
    html = <<-EOF
    <?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by Balsamiq Exporter -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <link rel="stylesheet" type="text/css" href="reset.css" />
      <link rel="stylesheet" type="text/css" href="vcurly.css" />
      <script type = "text/javascript" src="basic.js"> </script>
      <script type = "text/javascript" src="vcurly.js"> </script>
    <title>Balsamiq</title>
    <script type="text/javascript">
      addLoadEvent(function() {draw_vcurley("VCurly48canvas", true)});

      addLoadEvent(function() {draw_vcurley("VCurly49canvas", false)});

    </script>
  </head>

  <body>
    <div class="VCurly" id="VCurly48"
        style="position: absolute; font-size:9pt; text-align: left; left: 54px; top: 43px; width: 180px; height: 140px;
               padding:5px; outline: none; color: #010101; background-color: transparent; z-index: 0">
      <canvas width=180px height=140 id="VCurly48canvas" style="position: absolute;">
      </canvas>
      <div style="position: absolute; font-size:9pt; text-align: left; left: 0px; top: 40%; width: 180px; height: 100%;
           padding:5px; outline: none; text-align: center; color: #010101; background-color: transparent; z-index: 0">
        <p><b>A paragraph of text.</b></p>
<p><b>A second row of text.</b></p>

      </div>
    </div>
    <div class="VCurly" id="VCurly49"
        style="position: absolute; font-size:15pt; text-align: left; left: 136px; top: 171px; width: 241px; height: 229px;
               padding:5px; outline: none; color: #010101; background-color: transparent; z-index: 1">
      <canvas width=241px height=229 id="VCurly49canvas" style="position: absolute;">
      </canvas>
      <div style="position: absolute; right: 25px;  top: 40%; height: 100%; font-size:15pt; text-align: center; padding:5px; outline: none; color: #010101; 
        background-color: transparent; z-index: 1">
        <p><b><i><u>A paragraph of text.</u></i></b></p>
<p><b><i><u>A second row of text.</u></i></b></p>

      </div>
    </div>
  </body>
</html>

    EOF
    css = <<-EOF

.VCurly {
	background-color: transparent;
	outline: none
}

canvas {
	background-color: transparent;
}

    EOF
    js = <<-EOF

function draw_vcurley(id, left)
{
  var canvasel = document.getElementById(id);
  var height = canvasel.height;
  var width = canvasel.width;
	var ctx = canvasel.getContext('2d');
  ctx.strokeStyle = "rgba(1,1,1,1.0)";
  ctx.lineWidth = 3;
  ctx.lineCap = "round";
  if (left)
  {
   	ctx.moveTo(8,2);
  	ctx.quadraticCurveTo(16,height*0.12, 8,height*0.25);
  	ctx.quadraticCurveTo(0,height*0.375, 18,height*0.5);
  	ctx.quadraticCurveTo(0,height*0.625, 8,height*0.75);
  	ctx.quadraticCurveTo(16,height*0.875, 8,height-2);
  }
  else
  {
   	ctx.moveTo(width-8,2);
  	ctx.quadraticCurveTo(width-16,height*0.12, width-8,height*0.25);
  	ctx.quadraticCurveTo(width,height*0.375, width-18,height*0.5);
  	ctx.quadraticCurveTo(width,height*0.625, width-8,height*0.75);
  	ctx.quadraticCurveTo(width-16,height*0.875, width-8,height-2);
  }
  ctx.stroke();
}

function draw_vcurley(id, left)
{
  var canvasel = document.getElementById(id);
  var height = canvasel.height;
  var width = canvasel.width;
	var ctx = canvasel.getContext('2d');
  ctx.strokeStyle = "rgba(1,1,1,1.0)";
  ctx.lineWidth = 3;
  ctx.lineCap = "round";
  if (left)
  {
   	ctx.moveTo(8,2);
  	ctx.quadraticCurveTo(16,height*0.12, 8,height*0.25);
  	ctx.quadraticCurveTo(0,height*0.375, 18,height*0.5);
  	ctx.quadraticCurveTo(0,height*0.625, 8,height*0.75);
  	ctx.quadraticCurveTo(16,height*0.875, 8,height-2);
  }
  else
  {
   	ctx.moveTo(width-8,2);
  	ctx.quadraticCurveTo(width-16,height*0.12, width-8,height*0.25);
  	ctx.quadraticCurveTo(width,height*0.375, width-18,height*0.5);
  	ctx.quadraticCurveTo(width,height*0.625, width-8,height*0.75);
  	ctx.quadraticCurveTo(width-16,height*0.875, width-8,height-2);
  }
  ctx.stroke();
}

    EOF
    filename = "vcurly"
    TestingFileSupport::test_elements(filename, data, html, css, js, false)
  end

end
