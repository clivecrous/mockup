#!/usr/bin/env ruby
      
# Copyright (c) 2009 Cory Ondrejka. All rights reserved.
# See License.txt for licensing details.

require "#{File.dirname(__FILE__)}/../testing_file_support"

describe BalsamiqControlParser do
  it "properly handles arrow" do
    data = <<-EOF
            <mockup version="1.0" skin="sketch">
      <controls>
        <control controlID="0" controlTypeID="com.balsamiq.mockups::Arrow" x="162" y="85" w="-1" h="-1" zOrder="0" locked="false" isInGroup="-1"/>
        <control controlID="1" controlTypeID="com.balsamiq.mockups::Arrow" x="335" y="119" w="150" h="113" zOrder="1" locked="false" isInGroup="-1">
          <controlProperties>
            <direction>bottom</direction>
          </controlProperties>
        </control>
        <control controlID="2" controlTypeID="com.balsamiq.mockups::Arrow" x="62" y="70" w="150" h="290" zOrder="2" locked="false" isInGroup="-1"/>
        <control controlID="3" controlTypeID="com.balsamiq.mockups::Arrow" x="47" y="126" w="393" h="137" zOrder="3" locked="false" isInGroup="-1">
          <controlProperties>
            <direction>bottom</direction>
            <color>32832</color>
            <backgroundAlpha>0.5</backgroundAlpha>
          </controlProperties>
        </control>
        <control controlID="4" controlTypeID="com.balsamiq.mockups::Arrow" x="134" y="85" w="150" h="290" zOrder="4" locked="false" isInGroup="-1">
          <controlProperties>
            <direction>bottom</direction>
            <color>16711680</color>
          </controlProperties>
        </control>
      </controls>
    </mockup>


    EOF
    html = <<-EOF
    <?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by Balsamiq Exporter -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <link rel="stylesheet" type="text/css" href="reset.css" />
      <link rel="stylesheet" type="text/css" href="arrow.css" />
      <script type = "text/javascript" src="basic.js"> </script>
      <script type = "text/javascript" src="arrow.js"> </script>
    <title>Balsamiq</title>
    <script type="text/javascript">
      addLoadEvent(function() {draw_arrow("canvas_0", "rgba(32,32,30,1.0)", [5,5], [145, 95], true, true)});

      addLoadEvent(function() {draw_arrow("canvas_1", "rgba(32,32,30,1.0)", [5, 108], [145,5], true, true)});

      addLoadEvent(function() {draw_arrow("canvas_2", "rgba(32,32,30,1.0)", [5,5], [145, 285], true, true)});

      addLoadEvent(function() {draw_arrow("canvas_3", "rgba(0,128,64,0.5)", [5, 132], [388,5], true, true)});

      addLoadEvent(function() {draw_arrow("canvas_4", "rgba(255,0,0,1.0)", [5, 285], [145,5], true, true)});

    </script>
  </head>

  <body>
    <div class="Arrow" id="0"
        style="position: absolute; left: 162px; top: 85px;  z-index: 0">
      <canvas width="150" height="100" id="canvas_0"></canvas>
    </div>
    <div class="Arrow" id="1"
        style="position: absolute; left: 335px; top: 119px;  z-index: 1">
      <canvas width="150" height="113" id="canvas_1"></canvas>
    </div>
    <div class="Arrow" id="2"
        style="position: absolute; left: 62px; top: 70px;  z-index: 2">
      <canvas width="150" height="290" id="canvas_2"></canvas>
    </div>
    <div class="Arrow" id="3"
        style="position: absolute; left: 47px; top: 126px;  z-index: 3">
      <canvas width="393" height="137" id="canvas_3"></canvas>
    </div>
    <div class="Arrow" id="4"
        style="position: absolute; left: 134px; top: 85px;  z-index: 4">
      <canvas width="150" height="290" id="canvas_4"></canvas>
    </div>
  </body>
</html>

    EOF
    css = <<-EOF

.Arrow {
	background-color: transparent;
	outline: none
}

canvas {
	background-color: transparent;
}

    EOF
    js = <<-EOF

function draw_arrow(id, color, a, b, left, right)
{
  var canvas = document.getElementById(id);
  if (canvas.getContext)
  {
    var c1x, c1y, c2x, c2y;
    var up;
    if (a[1] < b[1])
    {
      up = 1.0;
      c1x = (a[0] + b[0])*0.5;
      c1y = (a[1] + b[1])*0.15;
      c2x = (a[0] + b[0])*0.85;
      c2y = (a[1] + b[1])*0.50;
    }
    else
    {
      up = -1.0;
      c1x = (a[0] + b[0])*0.15;
      c1y = (a[1] + b[1])*0.50;
      c2x = (a[0] + b[0])*0.5;
      c2y = (a[1] + b[1])*0.15;
    }

    var arrow_size = 13;
    var ctx = canvas.getContext('2d');
    ctx.strokeStyle = color;
    ctx.lineWidth = 5;
    ctx.lineCap = "round";
		ctx.moveTo(a[0],a[1]);
		ctx.bezierCurveTo(c1x,c1y,c2x,c2y,b[0],b[1]);
		if (left)
		{
  		ctx.moveTo(a[0],a[1]);
  		ctx.lineTo(a[0] + arrow_size, a[1] - up*0.3*arrow_size);
  		ctx.moveTo(a[0],a[1]);
  		ctx.lineTo(a[0] - 0.2*arrow_size, a[1] + up*arrow_size);
		}
		if (right)
	  {
  		ctx.moveTo(b[0],b[1]);
  		ctx.lineTo(b[0] - arrow_size, b[1] + up*0.3*arrow_size);
  		ctx.moveTo(b[0],b[1]);
  		ctx.lineTo(b[0] - 0.2*arrow_size, b[1] - up*arrow_size);		    
	  }
		ctx.stroke();
  }
}

    EOF
    filename = "arrow"
    TestingFileSupport::test_elements(filename, data, html, css, js, false)
  end

end
