#!/usr/bin/env ruby
      
# Copyright (c) 2009 Cory Ondrejka. All rights reserved.
# See License.txt for licensing details.

require "#{File.dirname(__FILE__)}/../testing_file_support"

describe BalsamiqControlParser do
  it "properly handles hcurly" do
    data = <<-EOF
            <mockup version="1.0" skin="sketch">
      <controls>
        <control controlID="10" controlTypeID="com.balsamiq.mockups::HCurly" x="31" y="13" w="-1" h="-1" zOrder="0" locked="false" isInGroup="-1">
          <controlProperties>
            <text>A%20paragraph%20of%20text.%0AA%20second%20row%20of%20text.</text>
          </controlProperties>
        </control>
        <control controlID="11" controlTypeID="com.balsamiq.mockups::HCurly" x="16" y="81" w="384" h="84" zOrder="1" locked="false" isInGroup="-1">
          <controlProperties>
            <text>More%20text%2C%20with%20curly%20braces</text>
            <direction>bottom</direction>
            <color>16711680</color>
            <align>center</align>
          </controlProperties>
        </control>
      </controls>
    </mockup>


    EOF
    html = <<-EOF
    <?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by Balsamiq Exporter -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <link rel="stylesheet" type="text/css" href="reset.css" />
      <link rel="stylesheet" type="text/css" href="hcurly.css" />
      <script type = "text/javascript" src="basic.js"> </script>
      <script type = "text/javascript" src="hcurly.js"> </script>
    <title>Balsamiq</title>
    <script type="text/javascript">
      addLoadEvent(function() {draw_hcurley("HCurly10canvas", true)});

      addLoadEvent(function() {draw_hcurley("HCurly11canvas", false)});

    </script>
  </head>

  <body>
    <div class="HCurly" id="HCurly10"
        style="position: absolute; font-size:9pt; text-align: left; left: 31px; top: 13px; width: 200px; height: 80px;
               padding:5px; outline: none; color: #010101; background-color: transparent; z-index: 0">
      <canvas width=200px height=80 id="HCurly10canvas" style="position: absolute;">
      </canvas>
      <div style="position: absolute; font-size:9pt; text-align: left; left: 0px; top: 25px; width: 100%; height: 80px;
           padding:5px; outline: none; text-align: center; color: #010101; background-color: transparent; z-index: 0">
        <p><b>A paragraph of text.</b></p>
<p><b>A second row of text.</b></p>

      </div>
    </div>
    <div class="HCurly" id="HCurly11"
        style="position: absolute; font-size:9pt; text-align: left; left: 16px; top: 81px; width: 384px; height: 84px;
               padding:5px; outline: none; color: #010101; background-color: transparent; z-index: 1">
      <canvas width=384px height=84 id="HCurly11canvas" style="position: absolute;">
      </canvas>
      <div style="position: absolute; bottom: 25px; width: 100%; font-size:9pt; text-align: center; padding:5px; outline: none; color: rgba(255,0,0,1.0); 
        background-color: transparent; z-index: 1">
        <p><b>More text, with curly braces</b></p>

      </div>
    </div>
  </body>
</html>

    EOF
    css = <<-EOF

.HCurly {
	background-color: transparent;
	outline: none
}

canvas {
	background-color: transparent;
}

    EOF
    js = <<-EOF

function draw_hcurley(id, top)
{
  var canvasel = document.getElementById(id);
  var height = canvasel.height;
  var width = canvasel.width;
	var ctx = canvasel.getContext('2d');
  ctx.strokeStyle = "rgba(1,1,1,1.0)";
  ctx.lineWidth = 3;
  ctx.lineCap = "round";
  if (top)
  {
   	ctx.moveTo(2,8);
  	ctx.quadraticCurveTo(width*0.12,16, width*0.25,8);
  	ctx.quadraticCurveTo(width*0.375,0, width*0.5,18);
  	ctx.quadraticCurveTo(width*0.625,0, width*0.75,8);
  	ctx.quadraticCurveTo(width*0.875,16, width-2,8);
  }
  else
  {
   	ctx.moveTo(2,height-8);
  	ctx.quadraticCurveTo(width*0.12,height-16, width*0.25,height-8);
  	ctx.quadraticCurveTo(width*0.375,height, width*0.5,height-18);
  	ctx.quadraticCurveTo(width*0.625,height, width*0.75,height-8);
  	ctx.quadraticCurveTo(width*0.875,height-16, width-2,height-8);
  }
  ctx.stroke();
}

    EOF
    filename = "hcurly"
    TestingFileSupport::test_elements(filename, data, html, css, js, false)
  end

end
